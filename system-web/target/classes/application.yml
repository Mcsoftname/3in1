server:
  port: 8089
spring:
    application:
      name: system
    # 数据库配置 
    datasource:
        name: test
        url: jdbc:postgresql://postgres.host.mti.com:5321/xuhui
        username: postgres
        password: postgres
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: org.postgresql.Driver
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
    kafka:
    #  producer:
    #    bootstrap-servers: 10.168.4.176:9092
    #    retries: 0
    #    batch-size: 16384
    #    buffer-memory: 33554432
    #    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    #    value-serializer: org.apache.kafka.common.serialization.StringSerializer  earliest
      consumer:
        group-id: consumer-group-mti
        auto-offset-reset: earliest
        enable-auto-commit: true
        auto-commit-interval: 100
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        bootstrap-servers: 10.168.4.172:9092
        topic: test
        # bootstrap-servers: service-kafka1.bigdata.svc.enn.cn:30010
        # topic: ds119_t_sjd
     # properties:
     #   sasl.mechanism: GSSAPI
     #   security.protocol: SASL_PLAINTEXT
     #   sasl.kerberos.service.name: kafka
        # bootstrap-servers: 10.168.4.176:9092
        # topic: test
    # rabbitMq 配置
    rabbitmq:
      host: rabbitmq.host.mti1.com
      port: 5672
      username: guest
      password: guest
       # publisher-confirms: true
   # cache 配置
    cache:
       jcache:
         config:
           classpath:ehcache.xml
   # redis 配置
    redis:
     host: redis.host.mti.com
     port: 6379
     pool:
      max-idle: 100
      min-idle: 1
      max-active: 1000
      max-wait: -1
# jmx 配置
    jmx:
      enabled: false

# mybatis 配置        
mybatis:
    mapperLocations: classpath*:mapper/*.xml
    typeAliasesPackage: com.daoshu.**.mapper
    
pagehelper:
    helperDialect: postgresql
    reasonable: false
    supportMethodsArguments: true
# fdfs 配置 

# fdfs:
#   soTimeout: 1500
#   connectTimeout: 600
#   thumbImage:             #缩略图生成参数
#     width: 150
#     height: 150
#   trackerList:            #TrackerList参数,支持多个
#     - file.daoshu.com:22122

# elasticsearch index和type配置
pvd:
  base:
    es-server-config:
      clusterName: elasticsearch
      clusterNodeList :
       - http://es.host.mti.com:9200
      topicIndexName: knife
      topicIndextype: topic
# 阿里大鱼短信服务调用配置
smsVerification:
  accessKeyId: LTAICQa13mQByYB9
  accessKeySecret: wgFUxkFi1iV7tuRHO4X3QNSDA3zYwi
  connectTimeout: 10000
  readTimeout: 10000
  signName: 上海道枢
  templateCode: SMS_134975070
# 短信验证码过期时间设定（分钟）
smsCodeTimeOut:
  timeLength: 30
# 配置身份验证使用platform中的验证还是网关中的验证：如果统一走网关，需要将此值配置为false，不配置默认为false
platform:
  authorization: true

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    status-page-url: http://eureka.host.mti.com:${server.port}/swagger-ui.html
  client:
    service-url:
      defaultZone: http://daoshu:mti2018@eureka.host.mti.com:9000/eureka
map-level:
  defaultLevel: 1
